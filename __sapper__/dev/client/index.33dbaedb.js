import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, u as mount_component, n as noop, y as transition_in, z as transition_out, A as destroy_component } from './chunk.6414288c.js';
import './chunk.78ecd290.js';
import './chunk.11f50e20.js';
import './chunk.9e3350ae.js';
import { E as Editor } from './chunk.7ea8199f.js';

/* src/routes/editor/index.svelte generated by Svelte v3.12.1 */

function create_fragment(ctx) {
	var current;

	var editor = new Editor({
		props: { article: ctx.article },
		$$inline: true
	});

	const block = {
		c: function create() {
			editor.$$.fragment.c();
		},

		l: function claim(nodes) {
			editor.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(editor, target, anchor);
			current = true;
		},

		p: noop,

		i: function intro(local) {
			if (current) return;
			transition_in(editor.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(editor.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(editor, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

function instance($$self) {
	let article = { title: '', description: '', body: '', tagList: [] };

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		if ('article' in $$props) $$invalidate('article', article = $$props.article);
	};

	return { article };
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, []);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Index", options, id: create_fragment.name });
	}
}

export default Index;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguMzNkYmFlZGIuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvZWRpdG9yL2luZGV4LnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuXHRpbXBvcnQgRWRpdG9yIGZyb20gJy4vX0VkaXRvci5zdmVsdGUnO1xuXHRsZXQgYXJ0aWNsZSA9IHsgdGl0bGU6ICcnLCBkZXNjcmlwdGlvbjogJycsIGJvZHk6ICcnLCB0YWdMaXN0OiBbXSB9O1xuPC9zY3JpcHQ+XG5cbjxFZGl0b3Ige2FydGljbGV9Lz4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O3dCQUtTLE9BQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBSGYsSUFBSSxPQUFPLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
