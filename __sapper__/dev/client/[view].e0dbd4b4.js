import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_store, c as component_subscribe, a as space, j as claim_space, o as insert_dev, u as mount_component, y as transition_in, z as transition_out, h as detach_dev, A as destroy_component } from './chunk.6414288c.js';
import { a as stores$1 } from './chunk.78ecd290.js';
import { g as get } from './chunk.11f50e20.js';
import './chunk.52b8b945.js';
import { P as Profile } from './chunk.40fe0b6c.js';

/* src/routes/profile/[user]/[view].svelte generated by Svelte v3.12.1 */

function create_fragment(ctx) {
	var title_value, t, current;

	document.title = title_value = "" + ctx.profile.username + " • Conduit";

	var profile_1 = new Profile({
		props: {
		profile: ctx.profile,
		favorites: ctx.favorites,
		user: ctx.$session.user
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			t = space();
			profile_1.$$.fragment.c();
		},

		l: function claim(nodes) {
			t = claim_space(nodes);
			profile_1.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
			mount_component(profile_1, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			if ((!current || changed.profile) && title_value !== (title_value = "" + ctx.profile.username + " • Conduit")) {
				document.title = title_value;
			}

			var profile_1_changes = {};
			if (changed.profile) profile_1_changes.profile = ctx.profile;
			if (changed.favorites) profile_1_changes.favorites = ctx.favorites;
			if (changed.$session) profile_1_changes.user = ctx.$session.user;
			profile_1.$set(profile_1_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(profile_1.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(profile_1.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}

			destroy_component(profile_1, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

async function preload({ params }, { user }) {
	const username = params.user.slice(1);

	const { profile } = await get(`profiles/${username}`, user && user.token);
	return { profile, favorites: params.view === 'favorites' };
}

function instance($$self, $$props, $$invalidate) {
	let $session;

	

	let { profile, favorites } = $$props;
	const { session } = stores$1(); validate_store(session, 'session'); component_subscribe($$self, session, $$value => { $session = $$value; $$invalidate('$session', $session); });

	const writable_props = ['profile', 'favorites'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<View> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('profile' in $$props) $$invalidate('profile', profile = $$props.profile);
		if ('favorites' in $$props) $$invalidate('favorites', favorites = $$props.favorites);
	};

	$$self.$capture_state = () => {
		return { profile, favorites, $session };
	};

	$$self.$inject_state = $$props => {
		if ('profile' in $$props) $$invalidate('profile', profile = $$props.profile);
		if ('favorites' in $$props) $$invalidate('favorites', favorites = $$props.favorites);
		if ('$session' in $$props) session.set($session);
	};

	return { profile, favorites, session, $session };
}

class View extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["profile", "favorites"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "View", options, id: create_fragment.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.profile === undefined && !('profile' in props)) {
			console.warn("<View> was created without expected prop 'profile'");
		}
		if (ctx.favorites === undefined && !('favorites' in props)) {
			console.warn("<View> was created without expected prop 'favorites'");
		}
	}

	get profile() {
		throw new Error("<View>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set profile(value) {
		throw new Error("<View>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get favorites() {
		throw new Error("<View>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set favorites(value) {
		throw new Error("<View>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default View;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW3ZpZXddLmUwZGJkNGI0LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL3Byb2ZpbGUvW3VzZXJdL1t2aWV3XS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG5cdGltcG9ydCAqIGFzIGFwaSBmcm9tICdhcGkuanMnO1xuXG5cdGV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVsb2FkKHsgcGFyYW1zIH0sIHsgdXNlciB9KSB7XG5cdFx0Y29uc3QgdXNlcm5hbWUgPSBwYXJhbXMudXNlci5zbGljZSgxKTtcblxuXHRcdGNvbnN0IHsgcHJvZmlsZSB9ID0gYXdhaXQgYXBpLmdldChgcHJvZmlsZXMvJHt1c2VybmFtZX1gLCB1c2VyICYmIHVzZXIudG9rZW4pO1xuXHRcdHJldHVybiB7IHByb2ZpbGUsIGZhdm9yaXRlczogcGFyYW1zLnZpZXcgPT09ICdmYXZvcml0ZXMnIH07XG5cdH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuXHRpbXBvcnQgeyBzdG9yZXMsIGdvdG8gfSBmcm9tICdAc2FwcGVyL2FwcCc7XG5cdGltcG9ydCBQcm9maWxlIGZyb20gJy4vX1Byb2ZpbGUuc3ZlbHRlJztcblxuXHRleHBvcnQgbGV0IHByb2ZpbGUsIGZhdm9yaXRlcztcblx0Y29uc3QgeyBzZXNzaW9uIH0gPSBzdG9yZXMoKTtcbjwvc2NyaXB0PlxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT57cHJvZmlsZS51c2VybmFtZX0g4oCiIENvbmR1aXQ8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPFByb2ZpbGUge3Byb2ZpbGV9IHtmYXZvcml0ZXN9IHVzZXI9eyRzZXNzaW9uLnVzZXJ9Lz4iXSwibmFtZXMiOlsiYXBpLmdldCIsInN0b3JlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7eUNBb0JTLE9BQU8sQ0FBQyxRQUFROzs7O2VBR2YsT0FBTztpQkFBRyxTQUFTO1lBQVEsUUFBUSxDQUFDLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dGQUh6QyxPQUFPLENBQUMsUUFBUTs7Ozs7d0RBR2YsT0FBTzs0REFBRyxTQUFTO3NEQUFRLFFBQVEsQ0FBQyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcEIxQyxlQUFlLE9BQU8sQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUU7Q0FDbkQsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7O0NBRXRDLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxNQUFNQSxHQUFPLENBQUMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUMsRUFBRSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0NBQzlFLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sQ0FBQyxJQUFJLEtBQUssV0FBVyxFQUFFLENBQUM7Q0FDM0Q7Ozs7Ozs7Q0FPTSxNQUFJLE9BQU8sRUFBRSxxQkFBUyxDQUFDO0NBQzlCLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBR0MsUUFBTSxvSkFBRSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
