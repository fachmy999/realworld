import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, a as space, e as element, t as text, j as claim_space, b as claim_element, f as children, h as detach_dev, g as claim_text, k as attr_dev, l as add_location, o as insert_dev, p as append_dev, u as mount_component, q as set_data_dev, y as transition_in, z as transition_out, A as destroy_component, K as listen_dev, n as noop } from './chunk.6414288c.js';
import { g as goto } from './chunk.78ecd290.js';
import { p as post, d as del } from './chunk.11f50e20.js';
import { A as ArticleList } from './chunk.52b8b945.js';

/* src/routes/profile/[user]/_Profile.svelte generated by Svelte v3.12.1 */

const file = "src/routes/profile/[user]/_Profile.svelte";

// (41:5) {:else}
function create_else_block(ctx) {
	var button, i, t0, t1_value = ctx.profile.following ? 'Unfollow' : 'Follow' + "", t1, t2, t3_value = ctx.profile.username + "", t3, button_class_value, dispose;

	const block = {
		c: function create() {
			button = element("button");
			i = element("i");
			t0 = space();
			t1 = text(t1_value);
			t2 = space();
			t3 = text(t3_value);
			this.h();
		},

		l: function claim(nodes) {
			button = claim_element(nodes, "BUTTON", { class: true }, false);
			var button_nodes = children(button);

			i = claim_element(button_nodes, "I", { class: true }, false);
			var i_nodes = children(i);

			i_nodes.forEach(detach_dev);
			t0 = claim_space(button_nodes);
			t1 = claim_text(button_nodes, t1_value);
			t2 = claim_space(button_nodes);
			t3 = claim_text(button_nodes, t3_value);
			button_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(i, "class", "ion-plus-round");
			add_location(i, file, 45, 7, 1329);
			attr_dev(button, "class", button_class_value = "btn btn-sm action-btn " + (ctx.profile.following ? "btn-secondary" : "btn-outline-secondary"));
			add_location(button, file, 41, 6, 1169);
			dispose = listen_dev(button, "click", ctx.toggleFollowing);
		},

		m: function mount(target, anchor) {
			insert_dev(target, button, anchor);
			append_dev(button, i);
			append_dev(button, t0);
			append_dev(button, t1);
			append_dev(button, t2);
			append_dev(button, t3);
		},

		p: function update(changed, ctx) {
			if ((changed.profile) && t1_value !== (t1_value = ctx.profile.following ? 'Unfollow' : 'Follow' + "")) {
				set_data_dev(t1, t1_value);
			}

			if ((changed.profile) && t3_value !== (t3_value = ctx.profile.username + "")) {
				set_data_dev(t3, t3_value);
			}

			if ((changed.profile) && button_class_value !== (button_class_value = "btn btn-sm action-btn " + (ctx.profile.following ? "btn-secondary" : "btn-outline-secondary"))) {
				attr_dev(button, "class", button_class_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(button);
			}

			dispose();
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_else_block.name, type: "else", source: "(41:5) {:else}", ctx });
	return block;
}

// (37:5) {#if isUser}
function create_if_block(ctx) {
	var a, i, t;

	const block = {
		c: function create() {
			a = element("a");
			i = element("i");
			t = text(" Edit Profile Settings");
			this.h();
		},

		l: function claim(nodes) {
			a = claim_element(nodes, "A", { href: true, class: true }, false);
			var a_nodes = children(a);

			i = claim_element(a_nodes, "I", { class: true }, false);
			var i_nodes = children(i);

			i_nodes.forEach(detach_dev);
			t = claim_text(a_nodes, " Edit Profile Settings");
			a_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(i, "class", "ion-gear-a");
			add_location(i, file, 38, 7, 1090);
			attr_dev(a, "href", "/settings");
			attr_dev(a, "class", "btn btn-sm btn-outline-secondary action-btn");
			add_location(a, file, 37, 6, 1010);
		},

		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, i);
			append_dev(a, t);
		},

		p: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(a);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block.name, type: "if", source: "(37:5) {#if isUser}", ctx });
	return block;
}

function create_fragment(ctx) {
	var title_value, t0, div8, div3, div2, div1, div0, img, img_src_value, img_alt_value, t1, h4, t2_value = ctx.profile.username + "", t2, t3, p, t4_value = ctx.profile.bio + "", t4, t5, t6, div7, div6, div5, div4, ul, li0, a0, t7, a0_href_value, a0_class_value, t8, li1, a1, t9, a1_class_value, a1_href_value, t10, current;

	document.title = title_value = "" + ctx.profile.username + " â€¢ Conduit";

	function select_block_type(changed, ctx) {
		if (ctx.isUser) return create_if_block;
		return create_else_block;
	}

	var current_block_type = select_block_type(null, ctx);
	var if_block = current_block_type(ctx);

	var articlelist = new ArticleList({
		props: {
		tab: "profile",
		username: ctx.profile.username,
		favorites: ctx.favorites
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			t0 = space();
			div8 = element("div");
			div3 = element("div");
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			img = element("img");
			t1 = space();
			h4 = element("h4");
			t2 = text(t2_value);
			t3 = space();
			p = element("p");
			t4 = text(t4_value);
			t5 = space();
			if_block.c();
			t6 = space();
			div7 = element("div");
			div6 = element("div");
			div5 = element("div");
			div4 = element("div");
			ul = element("ul");
			li0 = element("li");
			a0 = element("a");
			t7 = text("My Articles");
			t8 = space();
			li1 = element("li");
			a1 = element("a");
			t9 = text("Favorited Articles");
			t10 = space();
			articlelist.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_space(nodes);

			div8 = claim_element(nodes, "DIV", { class: true }, false);
			var div8_nodes = children(div8);

			div3 = claim_element(div8_nodes, "DIV", { class: true }, false);
			var div3_nodes = children(div3);

			div2 = claim_element(div3_nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div1 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			img = claim_element(div0_nodes, "IMG", { src: true, class: true, alt: true }, false);
			var img_nodes = children(img);

			img_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);

			h4 = claim_element(div0_nodes, "H4", {}, false);
			var h4_nodes = children(h4);

			t2 = claim_text(h4_nodes, t2_value);
			h4_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);

			p = claim_element(div0_nodes, "P", {}, false);
			var p_nodes = children(p);

			t4 = claim_text(p_nodes, t4_value);
			p_nodes.forEach(detach_dev);
			t5 = claim_space(div0_nodes);
			if_block.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t6 = claim_space(div8_nodes);

			div7 = claim_element(div8_nodes, "DIV", { class: true }, false);
			var div7_nodes = children(div7);

			div6 = claim_element(div7_nodes, "DIV", { class: true }, false);
			var div6_nodes = children(div6);

			div5 = claim_element(div6_nodes, "DIV", { class: true }, false);
			var div5_nodes = children(div5);

			div4 = claim_element(div5_nodes, "DIV", { class: true }, false);
			var div4_nodes = children(div4);

			ul = claim_element(div4_nodes, "UL", { class: true }, false);
			var ul_nodes = children(ul);

			li0 = claim_element(ul_nodes, "LI", { class: true }, false);
			var li0_nodes = children(li0);

			a0 = claim_element(li0_nodes, "A", { href: true, class: true }, false);
			var a0_nodes = children(a0);

			t7 = claim_text(a0_nodes, "My Articles");
			a0_nodes.forEach(detach_dev);
			li0_nodes.forEach(detach_dev);
			t8 = claim_space(ul_nodes);

			li1 = claim_element(ul_nodes, "LI", { class: true }, false);
			var li1_nodes = children(li1);

			a1 = claim_element(li1_nodes, "A", { class: true, href: true }, false);
			var a1_nodes = children(a1);

			t9 = claim_text(a1_nodes, "Favorited Articles");
			a1_nodes.forEach(detach_dev);
			li1_nodes.forEach(detach_dev);
			ul_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t10 = claim_space(div5_nodes);
			articlelist.$$.fragment.l(div5_nodes);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(img, "src", img_src_value = ctx.profile.image);
			attr_dev(img, "class", "user-img");
			attr_dev(img, "alt", img_alt_value = ctx.profile.username);
			add_location(img, file, 32, 5, 858);
			add_location(h4, file, 33, 5, 931);
			add_location(p, file, 34, 5, 964);
			attr_dev(div0, "class", "col-xs-12 col-md-10 offset-md-1");
			add_location(div0, file, 31, 4, 807);
			attr_dev(div1, "class", "row");
			add_location(div1, file, 30, 3, 785);
			attr_dev(div2, "class", "container");
			add_location(div2, file, 29, 2, 758);
			attr_dev(div3, "class", "user-info");
			add_location(div3, file, 28, 1, 732);
			attr_dev(a0, "href", a0_href_value = "/profile/@" + ctx.profile.username);
			attr_dev(a0, "class", a0_class_value = "nav-link " + (ctx.favorites ? '' : 'active'));
			add_location(a0, file, 60, 7, 1706);
			attr_dev(li0, "class", "nav-item");
			add_location(li0, file, 59, 6, 1677);
			attr_dev(a1, "class", a1_class_value = "nav-link " + (ctx.favorites ? 'active' : ''));
			attr_dev(a1, "href", a1_href_value = "/profile/@" + ctx.profile.username + "/favorites");
			add_location(a1, file, 64, 7, 1854);
			attr_dev(li1, "class", "nav-item");
			add_location(li1, file, 63, 6, 1825);
			attr_dev(ul, "class", "nav nav-pills outline-active");
			add_location(ul, file, 58, 5, 1629);
			attr_dev(div4, "class", "articles-toggle");
			add_location(div4, file, 57, 4, 1594);
			attr_dev(div5, "class", "col-xs-12 col-md-10 offset-md-1");
			add_location(div5, file, 56, 3, 1544);
			attr_dev(div6, "class", "row");
			add_location(div6, file, 55, 2, 1523);
			attr_dev(div7, "class", "container");
			add_location(div7, file, 54, 1, 1497);
			attr_dev(div8, "class", "profile-page");
			add_location(div8, file, 27, 0, 704);
		},

		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div8, anchor);
			append_dev(div8, div3);
			append_dev(div3, div2);
			append_dev(div2, div1);
			append_dev(div1, div0);
			append_dev(div0, img);
			append_dev(div0, t1);
			append_dev(div0, h4);
			append_dev(h4, t2);
			append_dev(div0, t3);
			append_dev(div0, p);
			append_dev(p, t4);
			append_dev(div0, t5);
			if_block.m(div0, null);
			append_dev(div8, t6);
			append_dev(div8, div7);
			append_dev(div7, div6);
			append_dev(div6, div5);
			append_dev(div5, div4);
			append_dev(div4, ul);
			append_dev(ul, li0);
			append_dev(li0, a0);
			append_dev(a0, t7);
			append_dev(ul, t8);
			append_dev(ul, li1);
			append_dev(li1, a1);
			append_dev(a1, t9);
			append_dev(div5, t10);
			mount_component(articlelist, div5, null);
			current = true;
		},

		p: function update(changed, ctx) {
			if ((!current || changed.profile) && title_value !== (title_value = "" + ctx.profile.username + " â€¢ Conduit")) {
				document.title = title_value;
			}

			if ((!current || changed.profile) && img_src_value !== (img_src_value = ctx.profile.image)) {
				attr_dev(img, "src", img_src_value);
			}

			if ((!current || changed.profile) && img_alt_value !== (img_alt_value = ctx.profile.username)) {
				attr_dev(img, "alt", img_alt_value);
			}

			if ((!current || changed.profile) && t2_value !== (t2_value = ctx.profile.username + "")) {
				set_data_dev(t2, t2_value);
			}

			if ((!current || changed.profile) && t4_value !== (t4_value = ctx.profile.bio + "")) {
				set_data_dev(t4, t4_value);
			}

			if (current_block_type === (current_block_type = select_block_type(changed, ctx)) && if_block) {
				if_block.p(changed, ctx);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);
				if (if_block) {
					if_block.c();
					if_block.m(div0, null);
				}
			}

			if ((!current || changed.profile) && a0_href_value !== (a0_href_value = "/profile/@" + ctx.profile.username)) {
				attr_dev(a0, "href", a0_href_value);
			}

			if ((!current || changed.favorites) && a0_class_value !== (a0_class_value = "nav-link " + (ctx.favorites ? '' : 'active'))) {
				attr_dev(a0, "class", a0_class_value);
			}

			if ((!current || changed.favorites) && a1_class_value !== (a1_class_value = "nav-link " + (ctx.favorites ? 'active' : ''))) {
				attr_dev(a1, "class", a1_class_value);
			}

			if ((!current || changed.profile) && a1_href_value !== (a1_href_value = "/profile/@" + ctx.profile.username + "/favorites")) {
				attr_dev(a1, "href", a1_href_value);
			}

			var articlelist_changes = {};
			if (changed.profile) articlelist_changes.username = ctx.profile.username;
			if (changed.favorites) articlelist_changes.favorites = ctx.favorites;
			articlelist.$set(articlelist_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(articlelist.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(articlelist.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t0);
				detach_dev(div8);
			}

			if_block.d();

			destroy_component(articlelist);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

function instance($$self, $$props, $$invalidate) {
	

	let { profile, favorites, user } = $$props;

	async function toggleFollowing() {
		if (!user) return goto('/login');

		// optimistic UI
		$$invalidate('profile', profile.following = !profile.following, profile);

		($$invalidate('profile', { profile, favorites } = await (profile.following
			? post(`profiles/${profile.username}/follow`, null, user && user.token)
			: del(`profiles/${profile.username}/follow`, user && user.token)), profile, $$invalidate('favorites', favorites)));
	}

	const writable_props = ['profile', 'favorites', 'user'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Profile> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('profile' in $$props) $$invalidate('profile', profile = $$props.profile);
		if ('favorites' in $$props) $$invalidate('favorites', favorites = $$props.favorites);
		if ('user' in $$props) $$invalidate('user', user = $$props.user);
	};

	$$self.$capture_state = () => {
		return { profile, favorites, user, isUser };
	};

	$$self.$inject_state = $$props => {
		if ('profile' in $$props) $$invalidate('profile', profile = $$props.profile);
		if ('favorites' in $$props) $$invalidate('favorites', favorites = $$props.favorites);
		if ('user' in $$props) $$invalidate('user', user = $$props.user);
		if ('isUser' in $$props) $$invalidate('isUser', isUser = $$props.isUser);
	};

	let isUser;

	$$self.$$.update = ($$dirty = { user: 1, profile: 1 }) => {
		if ($$dirty.user || $$dirty.profile) { $$invalidate('isUser', isUser = user && (profile.username === user.username)); }
	};

	return {
		profile,
		favorites,
		user,
		toggleFollowing,
		isUser
	};
}

class Profile extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["profile", "favorites", "user"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Profile", options, id: create_fragment.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.profile === undefined && !('profile' in props)) {
			console.warn("<Profile> was created without expected prop 'profile'");
		}
		if (ctx.favorites === undefined && !('favorites' in props)) {
			console.warn("<Profile> was created without expected prop 'favorites'");
		}
		if (ctx.user === undefined && !('user' in props)) {
			console.warn("<Profile> was created without expected prop 'user'");
		}
	}

	get profile() {
		throw new Error("<Profile>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set profile(value) {
		throw new Error("<Profile>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get favorites() {
		throw new Error("<Profile>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set favorites(value) {
		throw new Error("<Profile>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get user() {
		throw new Error("<Profile>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set user(value) {
		throw new Error("<Profile>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { Profile as P };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2h1bmsuNDBmZTBiNmMuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvcHJvZmlsZS9bdXNlcl0vX1Byb2ZpbGUuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG5cdGltcG9ydCB7IGdvdG8gfSBmcm9tICdAc2FwcGVyL2FwcCc7XG5cdGltcG9ydCBBcnRpY2xlTGlzdCBmcm9tICcuLi8uLi9fY29tcG9uZW50cy9BcnRpY2xlTGlzdC9pbmRleC5zdmVsdGUnO1xuXHRpbXBvcnQgKiBhcyBhcGkgZnJvbSAnYXBpLmpzJztcblxuXHRleHBvcnQgbGV0IHByb2ZpbGU7XG5cdGV4cG9ydCBsZXQgZmF2b3JpdGVzO1xuXHRleHBvcnQgbGV0IHVzZXI7XG5cblx0JDogaXNVc2VyID0gdXNlciAmJiAocHJvZmlsZS51c2VybmFtZSA9PT0gdXNlci51c2VybmFtZSk7XG5cblx0YXN5bmMgZnVuY3Rpb24gdG9nZ2xlRm9sbG93aW5nKCkge1xuXHRcdGlmICghdXNlcikgcmV0dXJuIGdvdG8oJy9sb2dpbicpO1xuXG5cdFx0Ly8gb3B0aW1pc3RpYyBVSVxuXHRcdHByb2ZpbGUuZm9sbG93aW5nID0gIXByb2ZpbGUuZm9sbG93aW5nO1xuXG5cdFx0KHsgcHJvZmlsZSwgZmF2b3JpdGVzIH0gPSBhd2FpdCAocHJvZmlsZS5mb2xsb3dpbmdcblx0XHRcdD8gYXBpLnBvc3QoYHByb2ZpbGVzLyR7cHJvZmlsZS51c2VybmFtZX0vZm9sbG93YCwgbnVsbCwgdXNlciAmJiB1c2VyLnRva2VuKVxuXHRcdFx0OiBhcGkuZGVsKGBwcm9maWxlcy8ke3Byb2ZpbGUudXNlcm5hbWV9L2ZvbGxvd2AsIHVzZXIgJiYgdXNlci50b2tlbikpKTtcblx0fVxuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6aGVhZD5cblx0PHRpdGxlPntwcm9maWxlLnVzZXJuYW1lfSDigKIgQ29uZHVpdDwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48ZGl2IGNsYXNzPVwicHJvZmlsZS1wYWdlXCI+XG5cdDxkaXYgY2xhc3M9XCJ1c2VyLWluZm9cIj5cblx0XHQ8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG5cdFx0XHQ8ZGl2IGNsYXNzPVwicm93XCI+XG5cdFx0XHRcdDxkaXYgY2xhc3M9XCJjb2wteHMtMTIgY29sLW1kLTEwIG9mZnNldC1tZC0xXCI+XG5cdFx0XHRcdFx0PGltZyBzcmM9e3Byb2ZpbGUuaW1hZ2V9IGNsYXNzPVwidXNlci1pbWdcIiBhbHQ9e3Byb2ZpbGUudXNlcm5hbWV9IC8+XG5cdFx0XHRcdFx0PGg0Pntwcm9maWxlLnVzZXJuYW1lfTwvaDQ+XG5cdFx0XHRcdFx0PHA+e3Byb2ZpbGUuYmlvfTwvcD5cblxuXHRcdFx0XHRcdHsjaWYgaXNVc2VyfVxuXHRcdFx0XHRcdFx0PGEgaHJlZj1cIi9zZXR0aW5nc1wiIGNsYXNzPVwiYnRuIGJ0bi1zbSBidG4tb3V0bGluZS1zZWNvbmRhcnkgYWN0aW9uLWJ0blwiPlxuXHRcdFx0XHRcdFx0XHQ8aSBjbGFzcz1cImlvbi1nZWFyLWFcIj48L2k+IEVkaXQgUHJvZmlsZSBTZXR0aW5nc1xuXHRcdFx0XHRcdFx0PC9hPlxuXHRcdFx0XHRcdHs6ZWxzZX1cblx0XHRcdFx0XHRcdDxidXR0b25cblx0XHRcdFx0XHRcdFx0Y2xhc3M9J2J0biBidG4tc20gYWN0aW9uLWJ0biB7cHJvZmlsZS5mb2xsb3dpbmcgPyBcImJ0bi1zZWNvbmRhcnlcIiA6IFwiYnRuLW91dGxpbmUtc2Vjb25kYXJ5XCJ9J1xuXHRcdFx0XHRcdFx0XHRvbjpjbGljaz0ne3RvZ2dsZUZvbGxvd2luZ30nXG5cdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdDxpIGNsYXNzPVwiaW9uLXBsdXMtcm91bmRcIj48L2k+XG5cdFx0XHRcdFx0XHRcdHtwcm9maWxlLmZvbGxvd2luZyA/ICdVbmZvbGxvdycgOiAnRm9sbG93J30ge3Byb2ZpbGUudXNlcm5hbWV9XG5cdFx0XHRcdFx0XHQ8L2J1dHRvbj5cblx0XHRcdFx0XHR7L2lmfVxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdDwvZGl2PlxuXHRcdDwvZGl2PlxuXHQ8L2Rpdj5cblxuXHQ8ZGl2IGNsYXNzPVwiY29udGFpbmVyXCI+XG5cdFx0PGRpdiBjbGFzcz1cInJvd1wiPlxuXHRcdFx0PGRpdiBjbGFzcz1cImNvbC14cy0xMiBjb2wtbWQtMTAgb2Zmc2V0LW1kLTFcIj5cblx0XHRcdFx0PGRpdiBjbGFzcz1cImFydGljbGVzLXRvZ2dsZVwiPlxuXHRcdFx0XHRcdDx1bCBjbGFzcz1cIm5hdiBuYXYtcGlsbHMgb3V0bGluZS1hY3RpdmVcIj5cblx0XHRcdFx0XHRcdDxsaSBjbGFzcz1cIm5hdi1pdGVtXCI+XG5cdFx0XHRcdFx0XHRcdDxhIGhyZWY9Jy9wcm9maWxlL0B7cHJvZmlsZS51c2VybmFtZX0nIGNsYXNzPVwibmF2LWxpbmsge2Zhdm9yaXRlcyA/ICcnIDogJ2FjdGl2ZSd9XCI+TXkgQXJ0aWNsZXM8L2E+XG5cdFx0XHRcdFx0XHQ8L2xpPlxuXG5cdFx0XHRcdFx0XHQ8bGkgY2xhc3M9XCJuYXYtaXRlbVwiPlxuXHRcdFx0XHRcdFx0XHQ8YSBjbGFzcz1cIm5hdi1saW5rIHtmYXZvcml0ZXMgPyAnYWN0aXZlJyA6ICcnfVwiIGhyZWY9Jy9wcm9maWxlL0B7cHJvZmlsZS51c2VybmFtZX0vZmF2b3JpdGVzJz5GYXZvcml0ZWQgQXJ0aWNsZXM8L2E+XG5cdFx0XHRcdFx0XHQ8L2xpPlxuXHRcdFx0XHRcdDwvdWw+XG5cdFx0XHRcdDwvZGl2PlxuXG5cdFx0XHRcdDxBcnRpY2xlTGlzdCB0YWI9J3Byb2ZpbGUnIHVzZXJuYW1lPSd7cHJvZmlsZS51c2VybmFtZX0nIHtmYXZvcml0ZXN9Lz5cblx0XHRcdDwvZGl2PlxuXHRcdDwvZGl2PlxuXHQ8L2Rpdj5cbjwvZGl2PiJdLCJuYW1lcyI6WyJhcGkucG9zdCIsImFwaS5kZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O21DQThDUSxPQUFPLENBQUMsU0FBUyxHQUFHLFVBQVUsR0FBRyxRQUFRLDhCQUFHLE9BQU8sQ0FBQyxRQUFROzs7Ozs7Ozs7Ozs7Ozs7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
